/* usar flexbox para la alineacion o distribucion de los elementos que estaran dentro de contenedores
    ej. barras de navegacion
    usar css grid para definir el layout de tu sitio web, como pueden ser las columnas o contenedores de elementos
    ej. la parte de servicios 
    usar margin:0 auto; para centralizar horizontalmente CUYO PADRE NO ES UN display:flex y ya que no tiene accesso a justify-content pues se usa margin:0 auto;
    */

:root{
    --blanco: #FFFFFF;
    --oscuro: #212121;
    --primario: #FFC107;
    --secundario: #0097A7;
    --gris: #757575;
    --grisClaro: #DFE9F3;
}



/* Globales */
html{
    font-size: 62.5%;
    box-sizing: border-box; /* Ayuda para Box Model */
}
*,*:before, *:after{
    box-sizing: inherit;
}
body{
    font-family: "Krub", sans-serif;
    font-size: 1.6rem; /* 1 rem = 10px */ /* 1.6rem = 16px */
    background-image: linear-gradient(to top, var(--grisClaro) 0%, var(--blanco) 100%); /*( hacia donde, color que empieza de abajo, ya que es "to top" y desde que % de la pagina empieza, con que color termina y en que % de la pagina */
}

.footer{
    text-align: center;
    font-weight: bold;
}

.contenedor{
    max-width: 120rem;
    margin: 0 auto; /* orden de margin: arriba, derecha, abajo, izquierda si solo hay 2 valores: 1ero es de arriba y abajo y el segundo: izq a derecha */
}


.boton{
    background-color: var(--secundario);
    color: var(--blanco);
    padding: 1rem 3rem;
    margin-top: 3rem;
    font-size: 2rem;
    text-decoration: none;
    text-transform: uppercase;
    font-weight: bold;
    border-radius: .5rem;
    width: 90%;
    text-align: center;
    border: none; /* esto es para la parte de submit */
}

.boton:hover{
    background-color: var(--primario);
    color: var(--oscuro);
    cursor: pointer;
}

@media (min-width: 768px) {
    .boton{
        width: auto;
    }
}

.sombra{
    -webkit-box-shadow: 0px 5px 15px 0px rgba(105,105,105,0.47);
    -moz-box-shadow: 0px 5px 15px 0px rgba(105,105,105,0.47);
    box-shadow: 0px 5px 15px 0px rgba(105,105,105,0.47);
    background-color: var(--blanco);
    padding: 2rem;
    border-radius: 1rem;
}


/* Tipografia */
h1{
    font-size: 3.8rem;
}

h2{
    font-size: 2.8rem;
}

h3{
    font-size: 1.8rem;
}

h1,h2,h3{
    text-align: center;
}

p span{
    font-size: 1.1rem;
}


/* Titulos */
.titulo span{
    font-size: 2rem;
}

/* Utilidades */
.w-sm-100{
    width: 100%;
}

@media (min-width: 768px) {
    .w-sm-100{
        width: auto;
    }
}

.flex{
    display: flex;
}

.aliniar-derecha{
    justify-content: flex-end;
}

/* Navegacion Principal */
.nav-bg{
    background-color: var(--secundario);
}

.navegacion-principal{ /* si se va a hacer una version movil, hacer el diseno de movil primero, y en el MQ hacerlo para pantallas mas grandes, por eso aqui mi navegacion principal se hizo para movil, y en el MQ para tablets o pantallas mas grandes */
    display: flex;
    flex-direction: column;
    
}

@media (min-width: 768px) {
    .navegacion-principal{
        flex-direction: row ;
        justify-content: space-between;
    }
}

.navegacion-principal a{
    display: block;
    text-align: center;
    color: var(--blanco);
    text-decoration: none;
    font-size: 2rem;
    font-weight: bold;
    padding: 1rem;
}

.navegacion-principal a:hover{
    background-color: var(--primario);
    color: var(--oscuro)
}




/* Hero */
.hero{
    background-image: url(../img/hero.jpg);
    background-repeat: no-repeat;
    background-size: cover;
    height: 450px;
    position: relative;
    margin-bottom: 2rem;
}

.contenido-hero{
    position: absolute;
    background-color: rgba(0, 0, 0, .7); /* anterior */
    background-color: rgb(0 0 0 / 70% );
    width: 100%;
    height: 100%;

    display: flex; /* codigo para alinear vertical y horizontalmente (todo abajo del display:flex menos el flex-direction */
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

.contenido-hero h2,
.contenido-hero p{
    color: var(--blanco);
}

.contenido-hero .ubicacion{
    display: flex;
    align-items: flex-end;
}


/* Servicios */

@media (min-width: 768px) {
    .servicios{
        display: grid;
        grid-template-columns: repeat(3, 1fr); /* MAS sencillo todavia, en vez de escribir 3 veces 1fr pues se usa repeat(cantidad de veces, frs) usar si todos los fr van a tener el mismo valor */
        column-gap: 5rem;
        /*grid-template-columns: 1fr 1fr 1fr; basicamente lo mismo de abajo pero mas sencillo, 1fr = 1 fraccion. css hace el calculo. 1fr es lo mismo que 33.3% */
        /*grid-template-columns: 33.3% 33.3% 33.3%; cantidad de espacio que va a tomar cada columna */
        /*grid: 200px 800px / 200px 200px;  rows primero(200px 800px) y columnas despues(200px 200px) */
    }
}
.servicio{
    display: flex;
    flex-direction: column;
    align-items: center;
}

.servicio h3{
    color: var(--secundario);
    font-weight: normal;
}

.servicio p{
    line-height: 2;
    text-align: center;
}

.servicio .iconos{
    height: 15rem;
    width: 15rem;
    background-color: var(--primario);
    border-radius: 10rem;

    display: flex;
    align-items: center;
    justify-content: space-evenly;
}

/* Contacto */
.formulario{
    background-color: var(--gris);
    width: min(60rem, 100%); /* Utilizar el valor mas pequeno. esto ayuda para no usar tanto MQs */
    margin: 0 auto;
    padding: 2rem;
    border-radius: 1rem;
}

.formulario fieldset{
    border: none;
}

.formulario legend{
    color: var(--primario);
    text-align: center;
    font-size: 1.8rem;
    text-transform: uppercase;
    font-weight: bold;
    margin-bottom: 2rem;
}
@media (min-width: 768px) {
    .contenedor-campos{
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        grid-template-rows: auto auto 20rem;
        column-gap: 1rem;
    }
    .campo:nth-child(3),
    .campo:nth-child(4){
        grid-column: 1 / 3; /* extiende la parte de correo desde la columna 1 a la 3
                                tambien se pone .campo:nth-child(3) ya que el correo se encuentra en la 3era ocasion que 
                                se uso la clase campo (mirar index para entender mejor) y para saber de que columna/fila a que
                                columna/fila hay que usar el inspect element en el browser, buscar la parte de grid y undir el
                                boton que sale que dice "grid". ya de ahi ves los numeros de las filas y columnas. */
    }
}


.campo{
    margin-bottom: 1rem;
}

.campo label{
    color: var(--blanco);
    font-weight: bold;
    margin-bottom: .5rem;
    display: block; /* posiciona todo en el mayor espacio que puede, para verlo mas visual, quitalo y anadelo de nuevo */
}

.campo textarea{
    height: 20rem;
}

.input-text{
    width: 100%;
    border: none;
    padding: 1.5rem;
    border-radius: 1.5rem;
}